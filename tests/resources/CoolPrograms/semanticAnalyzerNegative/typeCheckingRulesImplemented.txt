Type Checking rules implemented

CLASS:
	1. Didn't define a Main class
	2. Inherited from Int/Bool/String (report line number of Int/Bool/String)

METHOD:
	1. Didn't define a main method inside Main that had 0 parameters

EXPRESSIONS:
    4. [Var] (doesn't need tests)
    3. [ASSIGN]
    [True], [False] have no hypotheses so they are trivially checked
    [Int], [String] have hypotheses that are enforced by C++ types so they are trivially checked
    5. [New] (doesn't need tests)

       [Dispatch]
       [Static Dispatch]

	1. [If]
    [Sequence] is trivially checked
    [Let-No-Init] is trivially checked
    [Case] is trivially checked
        10. All case types are distinct
            caseRepeatTypes.cl
	2. [Loop]

	[Isvoid]

	6. [Not] and [Neg]
	7. [Arith]
	8. [Equal] and [LT] and [LTE]

	9. [Attr-Init]
	[Method]

ivan rules implemented
EXPRESSIONS:
    Let:
        1. Let introduces 0 identifiers
            let0identifiers.cl
        2. Let introduces repeat identifier (within those already introduced in same let)
            letRepeatIdentifier.cl
    Case:
        3. At least one case
            case0Cases.cl
    Block:
        5. At least one subexpression